#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <cmath>
#include <string>
#include <set>
using namespace std;
const int INF = 2e9;
const int MOD = 1e9 + 7;
const int MAX = 1e6 + 1;
typedef pair<int, int> P;
typedef long long ll;

int arr[MAX];

int find(int n) {
	if (arr[n] < 0) return n;
	arr[n] = find(arr[n]);
	return arr[n];
}
void merge(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return;
	if (arr[a] < arr[b]) {
		arr[a] += arr[b];
		arr[b] = a;
	}
	else {
		arr[b] += arr[a];
		arr[a] = b;
	}
}

int isSame(int a, int b) {
	return find(a) == find(b);
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int n, m; cin >> n >> m;
	fill(arr, arr + n + 1, -1);
	while (m--) {
		int t, a, b; cin >> t >> a >> b;
		if (t == 0) merge(a, b);
		else {
			if (isSame(a, b)) cout << "YES" << endl;
			else cout << "NO" << endl;
		}
	}
}