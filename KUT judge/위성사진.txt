#include <iostream>
#include <queue>
using namespace std;
char mapp[100][100];
int visited[100][100];
int dir[4][2] = { {0,1},{0,-1},{1,0},{-1,0} };

int main() {
	int c, r; 
	cin >> c >> r;
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) cin >> mapp[i][j];
	}
	int ans = 0;
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			if (mapp[i][j] == '*' && !visited[i][j]) {
				int cnt = 0;
				queue<pair<int,int>> q;
				q.push({ i,j });
				visited[i][j] = true;
				while (!q.empty()) {
					int y = q.front().first, x = q.front().second;
					q.pop();
					cnt++;
					for (int k = 0; k < 4; k++) {
						int nx = x + dir[k][0];
						int ny = y + dir[k][1];
						if (mapp[ny][nx] == '*' && !visited[ny][nx]) {
							q.push({ ny, nx });
							visited[ny][nx] = true;
						}
					}
				}
				if (ans < cnt) ans = cnt;
			}
		}
	}
	cout << ans << endl;
}