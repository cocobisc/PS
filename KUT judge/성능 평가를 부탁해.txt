#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <set>
using namespace std;
typedef pair<pair<int, int>, int> ppii;
vector<ppii> v;
int list[50];
set<int> se;

bool cmp(ppii a, ppii b) {
	if (a.first.first != b.first.first) return a.first.first < b.first.first;
	else return a.first.second > b.first.second;
}

int main() {
	int k, n; cin >> k >> n;
	for (int i = 0; i < k; i++) {
		scanf("%d", &list[i]);
		se.insert(list[i]);
	}
		
	for (int i = 0; i < n; i++) {
		int comp[50];
		for (int j = 0; j < k; j++) scanf("%d", &comp[j]);
		bool flag = false;
		int num = 1e8, sum = 0;
		int cnt, cnt2;
		for (auto it = se.begin(); it != se.end(); it++) {
			cnt = count(comp, comp + k, *it);
			cnt2 = count(list, list + k, *it);
			if (!cnt || cnt < cnt2) {
				if (!flag) {
					num = *it;
					flag = true;
				}
			}
			sum += cnt;
		}
		v.push_back({ {k - sum, num}, i });
	}
	stable_sort(v.begin(), v.end(), cmp);
	printf("%d", v[0].second);
}
