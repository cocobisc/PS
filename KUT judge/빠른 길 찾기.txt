#include<iostream>
#include <queue>
using namespace std;

int n;
int dir[4][2] = { {0, 1}, {1, 0}, {0, -1}, {-1, 0} };
int a, b;

int main() {
	cin >> n;
	while (n--) {
		int sx, sy, ret = -1;
		cin >> a >> b;
		bool visited[100][100] = { false, };
		char arr[100][100];
		queue<pair<pair<int, int>, int>> q;
		for (int i = 0; i < a; i++) {
			for (int j = 0; j < b; j++) {
				cin >> arr[i][j];
				if (arr[i][j] == 'S') {
					sx = j; sy = i;
				}
			}
		}
		q.push({ {sx, sy}, 0 });
		visited[sy][sx] = true;
		while (!q.empty()) {
			pair<int, int> point = q.front().first;
			int x = point.first;
			int y = point.second;
			int cnt = q.front().second;
			q.pop();
			if (arr[y][x] == 'E') {
				ret = cnt;
				break;
			}
			for (int i = 0; i < 4; i++) {
				int tx = point.first + dir[i][0];
				int ty = point.second + dir[i][1];
				if (tx >= 0 && ty >= 0 && tx < b && ty < a && arr[ty][tx] != '#' && !visited[ty][tx]) {
					visited[ty][tx] = true;
					q.push({ { tx, ty }, cnt + 1 });
				}
			}
		}
		cout << ret << endl;
	}
}