#include <iostream>
#include <vector>
#include <algorithm>
typedef pair<int, int> pii;
typedef long long ll;
using namespace std;

bool cmp(pii a, pii b) { return a.second < b.second; }

int solution(vector<int> food_times, long long k) {
	ll sz = food_times.size();
	vector<pii> v;
	for (int i = 0; i < food_times.size(); i++) 
		v.push_back(pii(food_times[i], i));
	sort(v.begin(), v.end());
	int t = 0;
	for (int i = 0; i < v.size(); i++, sz--) {
		ll subtime = (v[i].first - t) * sz;
		if (!subtime) continue;
		if (subtime <= k) {
			k -= subtime;
			t = v[i].first;
		}
		else {
			k %= sz;
			sort(v.begin() + i, v.end(), cmp);
			return v[i + k].second + 1;
		}
	}
	return -1;
}

int main() {
	int n, k; cin >> n;
	vector<int> v(n);
	for (int i = 0; i < n; i++) cin >> v[i];
	cin >> k;
	cout << solution(v, k);
}