#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e5 + 1;
int arr[MAX], N, M;
int parent[MAX];

int find(int x) {
	if (parent[x] == x) return x;
	return parent[x] = find(parent[x]);
}

void uni(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return;
	parent[b] = a;
}

bool check() {
	for (int i = 1; i <= N; i++)
		if (find(parent[i]) != find(parent[arr[i]])) return false;
	return true;
}

int main() {
	cin >> N >> M;
	vector<pair<int, pair<int, int>>> v(M);

	for (int i = 1; i <= N; i++) {
		cin >> arr[i];
		parent[i] = i;
	}
	for (int i = 0; i < M; i++) {
		int a, b, w; cin >> a >> b >> w;
		v[i] = { w,{a,b} };
	}
	if (check()) return cout << -1, 0;
	
	sort(v.begin(), v.end());
	for (int i = M - 1; i >= 0; i--) {
		int a, b; tie(a, b) = v[i].second;
		uni(a, b);
		if (check()) return cout << v[i].first, 0;
	}
}