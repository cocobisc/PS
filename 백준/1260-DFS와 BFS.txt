#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;
int arr[1001][1001];
int visited[1001];
int n, m, v;

void dfs(int v) {
	if (visited[v]) return;
	visited[v] = 1;
	cout << v << " ";
	for (int i = 1; i <= n; i++) {
		if (arr[v][i]) dfs(i);
	}
}
void bfs(int v) {
	queue<int> q;
	q.push(v);
	while (!q.empty()) {
		int num = q.front();
		q.pop();
		if (!visited[num]) continue;
		visited[num] = 0;
		cout << num << " ";
		for (int i = 1; i <= n; i++) {
			if (arr[num][i]) q.push(i);
		}
	}
}
int main() {
	cin >> n >> m >> v;
	vector<int> first;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		arr[a][b] = arr[b][a] = 1;
	}
	dfs(v);
	cout << '\n';
	bfs(v);
}