#include <bits/stdc++.h>
using namespace std;

struct IP {
	int t[4];
}ip[1000];

string getBinary(int n) {
	string s;
	for (int i = 7; i >= 0; i--) {
		if (n & (1 << i)) s += '1';
		else s += '0';
	}
	return s;
}

int main() {
	int N; cin >> N;
	for (int i = 0; i < N; i++) {
		string s; cin >> s;
		int n = 0, idx = 0;
		for (char c : s) {
			if (c == '.') {
				ip[i].t[idx++] = n;
				n = 0;
				continue;
			}
			n = n * 10 + c - '0';
		}
		ip[i].t[idx] = n;
	}

	int idx = 8, loc = 3;

	for (int j = 0; j < 4; j++) {
		string s = getBinary(ip[0].t[j]);
		int flag = 0;
		for (int i = 1; i < N; i++) {
			string ss = getBinary(ip[i].t[j]);
			for (int k = 0; k < 8; k++) {
				if (s[k] != ss[k] && k < idx) {
					flag = 1;
					idx = min(idx, k); 
					loc = j;
				}
			}
		}
		if (flag) break;
	}

 	int sub[4] = { 0 };
	for (int i = 0; i < loc; i++) sub[i] = 255;
	sub[loc] = 255 - (int)pow(2, 8 - idx) + 1;

	for (int i = 0; i < 4; i++) {
		cout << (ip[0].t[i] & sub[i]);
		if (i < 3) cout << ".";
	}
	cout << endl;
	for (int i = 0; i < 4; i++) {
		cout << sub[i];
		if (i < 3) cout << ".";
	}
}