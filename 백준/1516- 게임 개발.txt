#include <bits/stdc++.h>
#define pii pair<int,int>
using namespace std;
vector<int> v[501];
int indegree[501], cost[501], result[501];

int main() {
	int n; cin >> n;
	for (int i = 1; i <= n; i++) {
		int sp; cin >> cost[i] >> sp;
		while (sp != -1) {
			indegree[i]++;
			v[sp].push_back(i);
			cin >> sp;
		}
	}
	queue<int> q;
	for (int i = 1; i <= n; i++)
		if (indegree[i] == 0) {
			q.push(i);
			result[i] = cost[i];
		}
	for (int i = 1; i <= n; i++) {
		int cur = q.front();
		q.pop();
		for (int next : v[cur]) {
			result[next] = max(result[next], result[cur] + cost[next]);
			if (--indegree[next] == 0) q.push(next);
		}
	}
	for (int i = 1; i <= n; i++) {
		cout << result[i] << "\n";
	}
}