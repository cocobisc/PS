#include <bits/stdc++.h>
using namespace std;

struct Edge {
	int u, v, w;
	Edge() : Edge(-1, -1, 0) {}
	Edge(int u1, int v1, int w1) : u(u1), v(v1), w(w1) {}
	bool operator <(const Edge& O) { return w < O.w; }
};

int uf[1001];
Edge edge[100000];

int find(int x) {
	if (uf[x] < 0) return x;
	return find(uf[x]);
}

bool merge(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return false;
	uf[a] = b;
	return true;
}

int main() {
	memset(uf, -1, sizeof(uf));
	int n, m; cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int a, b, c; cin >> a >> b >> c;
		edge[i] = Edge(a, b, c);
	}
	sort(edge, edge + m);
	int ans = 0;
	for (int i = 0; i < m; i++) {
		if (merge(edge[i].u, edge[i].v)) ans += edge[i].w;
	}
	cout << ans;
}