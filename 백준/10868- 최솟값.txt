#include <bits/stdc++.h>
using namespace std;

const int INF = 0x3f3f3f3f, MAX = 3e5 + 1;
int arr[MAX];

int findMin(int L, int R, int nodeNum, int nodeL, int nodeR) {
	if (nodeR < L || nodeL > R) return INF;
	if (L <= nodeL && nodeR <= R) return arr[nodeNum];
	int mid = nodeL + nodeR >> 1;
	return min(findMin(L, R, nodeNum * 2, nodeL, mid), findMin(L, R, nodeNum * 2 + 1, mid + 1, nodeR));
}

void construct(int n) {
	for (int i = n - 1; i > 0; i--) {
		arr[i] = min(arr[i * 2], arr[i * 2 + 1]);
	}
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	memset(arr, INF, sizeof(arr));
	int n, m; cin >> n >> m;
	int st = 1;
	while (st < n) st *= 2;
	for (int i = st; i < st + n; i++) cin >> arr[i];
	construct(st);

	for (int i = 0; i < m; i++) {
		int a, b; cin >> a >> b;
		cout << findMin(a, b, 1, 1, st) << '\n';
	}
}