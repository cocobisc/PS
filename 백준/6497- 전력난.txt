#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
const int MAX = 2e6;
vector<pair<int, pair<int, int>>> adj;
int parent[MAX];

int find(int x) {
	if (parent[x] == x) return x;
	return parent[x] = find(parent[x]);
}

bool uni(int a, int b) {
	a = find(a), b = find(b);
	if (a == b) return false;
	parent[b] = a;
	return true;
}

int main() {
	int m, n; 
	while (1) {
		for (int i = 0; i < MAX; i++) parent[i] = i;
		cin >> m >> n;
		if (!m) break;
		int sum = 0;
		for (int i = 0; i < n; i++) {
			int x, y, z; cin >> x >> y >> z;
			adj.push_back({ z, { x,y } });
			sum += z;
		}
		sort(adj.begin(), adj.end());
		for (int i = 0; i < n; i++) {
			int a, b; tie(a, b) = adj[i].second;
			if (uni(a, b)) sum -= adj[i].first;
		}
		cout << sum << '\n';
		adj.clear();

	}

	return 0;
}