#include <bits/stdc++.h>
using namespace std;

vector<pair<int, int>> adj[10001];
int visited[10001];
int n, m, s, e;

bool bfs(int w) {
	queue<int> q;
	q.push(s);
	while (q.size()) {
		int curr = q.front();
		q.pop();
		if (curr == e) return 1;
		for (auto next : adj[curr]) {
			int v = next.first;
			if (!visited[v] && next.second >= w) {
				q.push(v);
				visited[v] = 1;
			}
		}
	}
	return 0;
}
int main() {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int u, v, w; cin >> u >> v >> w;
		adj[u].push_back({ v,w });
		adj[v].push_back({ u,w });
	}
	cin >> s >> e;
	int le = 1, ri = 1e9;
	while (le <= ri) {
		int mid = le + ri >> 1;
		memset(visited, 0, sizeof(visited));
		visited[s] = 1;
		if (bfs(mid)) le = mid + 1;
		else ri = mid - 1;
	}
	cout << ri;
}