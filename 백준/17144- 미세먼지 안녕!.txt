#include <bits/stdc++.h>
using namespace std;

int arr[50][50];
int R, C, T;
int dx[] = { 1,-1,0,0 };
int dy[] = { 0,0,1,-1 };
int gy1 = -1, gy2;

void spread() {
	int temp[50][50] = { 0 };
	for (int i = 0; i < R; i++) {
		for (int j = 0; j < C; j++) {
			if (arr[i][j] == -1) continue;
			int cnt = 0;
			for (int k = 0; k < 4; k++) {
				int nx = j + dx[k], ny = i + dy[k];
				if (nx >= 0 && ny >= 0 && nx < C && ny < R && arr[ny][nx] != -1) {
					cnt++;
					temp[ny][nx] += arr[i][j] / 5;
				}
			}
			arr[i][j] -= arr[i][j] / 5 * cnt;
		}
	}
	for (int i = 0; i < R; i++) {
		for (int j = 0; j < C; j++) arr[i][j] += temp[i][j];
	}
}

void wind() {
	for (int i = gy1 - 1; i > 0; i--)
		arr[i][0] = arr[i - 1][0];
	for (int i = 0; i < C - 1; i++)
		arr[0][i] = arr[0][i + 1];
	for (int i = 0; i < gy1; i++)
		arr[i][C - 1] = arr[i + 1][C - 1];
	for (int i = C - 1; i > 0; i--)
		arr[gy1][i] = arr[gy1][i - 1];

	for (int i = gy2 + 1; i < R; i++)
		arr[i][0] = arr[i + 1][0];
	for (int i = 0; i < C - 1; i++)
		arr[R - 1][i] = arr[R - 1][i + 1];
	for (int i = R - 1; i > gy2; i--)
		arr[i][C - 1] = arr[i - 1][C - 1];
	for (int i = C - 1; i > 0; i--)
		arr[gy2][i] = arr[gy2][i - 1];

	arr[gy1][1] = arr[gy2][1] = 0;
}

int main() {
	cin >> R >> C >> T;
	for (int i = 0; i < R; i++) {
		for (int j = 0; j < C; j++) {
			cin >> arr[i][j];
			if (arr[i][j] == -1) {
				if (gy1 == -1) gy1 = i, gy2 = i + 1;
			}
		}
	}
	while (T--) {
		spread();
		wind();
	}
	int ans = 0;
	for (int i = 0; i < R; i++) 
		for (int j = 0; j < C; j++) 
			ans += arr[i][j];
	
	cout << ans + 2;
}