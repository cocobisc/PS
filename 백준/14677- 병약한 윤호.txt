#include <bits/stdc++.h>
using namespace std;

const int MAX = 1501;
int n, arr[MAX];
int dp[MAX][MAX][3];
string s;

int go(int l, int r, int k) {
	if (l > r)	return 0;

	int &ret = dp[l][r][k];
	if (ret != -1)	return ret;

	ret = 0;
	if (arr[l] == k)
		ret = max(ret, go(l + 1, r, (k + 1) % 3) + 1);
	if (arr[r] == k)
		ret = max(ret, go(l, r - 1, (k + 1) % 3) + 1);

	return ret;
}

int main() {
	cin >> n >> s;
	n *= 3;

	memset(dp, -1, sizeof(dp));
	for (int i = 0; i < n; i++) {
		if (s[i] == 'B') arr[i] = 0;
		else if (s[i] == 'L') arr[i] = 1;
		else arr[i] = 2;
	}
	cout << go(0, n - 1, 0);

	return 0;
}