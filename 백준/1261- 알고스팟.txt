#include <bits/stdc++.h>
using namespace std;

const int INF = 0x3f3f3f3f;
int dx[] = { 0,1,0,-1 };
int dy[] = { 1,0,-1,0 };
int dist[100][100], arr[100][100];
int n, m;


int main() {
	memset(dist, INF, sizeof(dist));
	cin >> m >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			char c; cin >> c;
			arr[i][j] = c - '0';
		}
	}

	queue<pair<int, int>> q;
	q.push({ 0,0 });
	dist[0][0] = 0;

	while (q.size()) {
		int x, y; tie(x, y) = q.front();
		q.pop();

		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i], ny = y + dy[i];
			if (nx >= 0 && ny >= 0 && nx < m && ny < n) {
				int cnt = dist[y][x];
				if (arr[ny][nx] == 1) cnt++;
				if (dist[ny][nx] > cnt) {
					dist[ny][nx] = cnt;
					q.push({ nx,ny });
				}
			}
		}
	}
	cout << dist[n - 1][m - 1];
}