
#include <bits/stdc++.h>
using namespace std;

int N, arr[500][500], dp[500][500], ans;
int dx[] = { 1,-1,0,0 };
int dy[] = { 0,0,1,-1 };

int dfs(int x, int y) {

	int &ret = dp[y][x];
	if (ret) return ret;
	ret = 1;

	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i], ny = y + dy[i];
		if (nx >= 0 && ny >= 0 && nx < N && ny < N) {
			if (arr[y][x] < arr[ny][nx]) ret = max(ret, dfs(nx, ny) + 1);
		}
	}

	return ret;
}

int main() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) cin >> arr[i][j];
	}
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			if (!dp[i][j]) ans = max(ans, dfs(j, i));
		}
	}
	cout << ans;
}