#include <bits/stdc++.h>
using namespace std;

vector<string> v, temp;
set<string> se;

int main() {
	int N, K; cin >> N;
	temp.resize(N);
	for (int i = 0; i < N; i++) cin >> temp[i];
	cin >> K;

	vector<int> v_idx(N);
	for (int i = 0; i < N; i++) v_idx[i] = i;
	do {
		string s;
		for (int i:v_idx) s += temp[i];
		v.push_back(s);
	} while (next_permutation(v_idx.begin(), v_idx.end()));

	int ans = 0;
	for (auto b : v) {
		int *fail = new int[(int)b.size()];
		memset(fail, 0, 4 * b.size());

		for (int i = 1, j = 0; i < b.size(); i++) {
			while (j > 0 && b[i] != b[j]) j = fail[j - 1];
			if (b[i] == b[j]) fail[i] = ++j;
		}

		string a = b + b; a.pop_back();
		int cnt = 0;
		for (int i = 0, j = 0; i < a.size(); i++) {
			while (j > 0 && a[i] != b[j]) j = fail[j - 1];
			if (a[i] == b[j]) {
				if (j == b.size() - 1) {
					cnt++;
					j = fail[j];
				}
				else j++;
			}
		}
		if (cnt == K) ans++;
	}
	cout << ans;
}


