#include <bits/stdc++.h>
using namespace std;
typedef pair<int, int> pii;

const int MAX = 5e4 + 1;
int N, T;
vector<pii> coord;
int visited[MAX];

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	cin >> N >> T;
	coord.resize(N + 1);
	coord[0].first = coord[0].second = 0;

	for (int i = 1; i <= N; i++) 
		cin >> coord[i].first >> coord[i].second;
	
	sort(coord.begin(), coord.end());

	queue<int> q;
	q.push(0);
	visited[0] = 1;
	int ret = 0;
	while(q.size()) {
		int t = q.size();
		while (t--) {
			int curr = q.front();
			q.pop();
			if (coord[curr].second == T) return cout << ret, 0;
			
			for (int i = curr + 1; i <= N; i++) {
				if (coord[curr].first + 2 < coord[i].first) break;
				if (!visited[i] && abs(coord[curr].second - coord[i].second) < 3) {
					visited[i] = 1;
					q.push(i);
				}
			}
			for (int i = curr - 1; i >= 0; i--) {
				if (coord[i].first + 2 < coord[curr].first) break;
				if (!visited[i] && abs(coord[curr].second - coord[i].second) < 3) {
					visited[i] = 1;
					q.push(i);
				}
			}
		}
		ret++;
	}
	cout << -1;

	return 0;
}



----------------------------------------------------------------------------

메모리 초과 이유 - vector array adj를 사용했고, 이에 따라 5만 * 5만 = 25억개 할당(GG)

시간초과 이유1 - 각 노드를 전부 구성하고 그 이후에 bfs 돌림
시간초과 이유2 - 쓸데없는 lower_bound

틀렸습니다 이유 - 상승, 하강 둘 다 고려해야 하는데 상승만 고려함
