#include <iostream>
#include <string>
#include <map>
using namespace std;
const int MAX = 2e5;
int arr[MAX];

int find(int n) {
	if (arr[n] < 0) return n;
	arr[n] = find(arr[n]);
	return arr[n];
}
void merge(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return;
	if (arr[a] < arr[b]) {
		arr[a] += arr[b];
		arr[b] = a;
	}
	else {
		arr[b] += arr[a];
		arr[a] = b;
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int T; cin >> T;
	while (T--) {
		map<string, int> ma;
		int idx = 0;
		int n; cin >> n;
		fill(arr, arr + 2 * n, -1);
		for (int i = 0; i < n; i++) {
			string a, b; cin >> a >> b;
			if (ma.find(a) == ma.end()) ma.insert({ a, idx++ });
			if (ma.find(b) == ma.end()) ma.insert({ b, idx++ });
			merge(ma.find(a)->second, ma.find(b)->second);
			cout << arr[find(ma.find(a)->second)] * -1 << '\n';
		}

	}
}