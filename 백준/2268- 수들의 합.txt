#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll sum(vector<ll> &tree, int idx) {
	ll ret = 0;
	while (idx) {
		ret += tree[idx];
		idx -= (idx & -idx);
	}
	return ret;
}

void update(vector<ll> &tree, int idx, int val) {
	while (idx < tree.size()) {
		tree[idx] += val;
		idx += (idx & -idx);
	}
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	int n, m, k; cin >> n >> m;
	vector<ll> tree(n + 1);
	vector<ll> arr(n + 1);

	for (int i = 0; i < m; i++) {
		int q; cin >> q;
		if (q) {
			int idx;
			ll val; cin >> idx >> val;
			ll diff = val - arr[idx];
			arr[idx] = val;
			update(tree, idx, diff);
		}
		else {
			int s, e; cin >> s >> e;
			if (s > e) swap(s, e);
			cout << sum(tree, e) - sum(tree, s - 1) << '\n';
		}
	}
}