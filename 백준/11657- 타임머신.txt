#include <bits/stdc++.h>
using namespace std;
vector<pair<int, int>> adj[501];
int cost[501];
const int INF = 2e9;
int main() {
	int n, m; cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int a, b, c; cin >> a >> b >> c;
		adj[a].push_back({ b,c });
	}
	fill(cost, cost + n + 1, INF);
	cost[1] = 0;
	
	bool cycle = false;
	for (int i = 0; i < n; i++) {
		for (int j = 1; j <= n; j++) {
			for (auto &p : adj[j]) {
				int next = p.first, d = p.second;
				if (cost[j] != INF && cost[next] > cost[j] + d) {
					cost[next] = cost[j] + d;
					if (i == n - 1) cycle = true;
				}
			}
		}
	}
	if (cycle) cout << -1 << '\n';
	else {
		for (int i = 2; i <= n; i++) cout << (cost[i] == INF ? -1 : cost[i]) << '\n';
	}
}